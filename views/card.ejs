<%- include ('./partials/secureHeader') %>	

        <!-- Page Content - Only Page Elements Here-->
        <div class="page-content footer-clear">

            <!-- Page Title-->
            <div class="pt-3">
                <div class="page-title d-flex">
                    <div class="align-self-center">
                        <a href="#"
                            data-back-button
                            class="me-3 ms-0 icon icon-xxs bg-theme rounded-s shadow-m">
                            <i class="bi bi-chevron-left color-theme font-14"></i>
                        </a>
                    </div>
                    <div class="align-self-center me-auto">
                        <!-- <p class="color-highlight">Hello Enabled</p> -->
                        <h1 class="color-theme">Card Request</h1>
                    </div>
                    <div class="align-self-center ms-auto">


        <a href="#" data-bs-toggle="dropdown"
        class="icon gradient-blue shadow-bg shadow-bg-s rounded-m">
        <img src="/img/user-default.png" width="45" class="rounded-m" alt="img">
    </a>
    <!-- Page Title Dropdown Menu-->
    <div class="dropdown-menu">
        <div class="card card-style shadow-m mt-1 me-1">
            <div class="list-group list-custom list-group-s list-group-flush rounded-xs px-3 py-1">
                <!-- <a href="page-wallet.html" class="list-group-item">
                    <i
                        class="has-bg gradient-green shadow-bg shadow-bg-xs color-white rounded-xs bi bi-credit-card"></i>
                    <strong class="font-13">Wallet</strong>
                </a>
                <a href="page-activity.html" class="list-group-item">
                    <i
                        class="has-bg gradient-blue shadow-bg shadow-bg-xs color-white rounded-xs bi bi-graph-up"></i>
                    <strong class="font-13">Activity</strong>
                </a> -->
                <a href="profile" class="list-group-item">
                    <i
                        class="has-bg gradient-yellow shadow-bg shadow-bg-xs color-white rounded-xs bi bi-person-circle"></i>
                    <strong class="font-13">Account</strong>
                </a>

                <a href="#" class="list-group-item" data-toggle-theme="" data-trigger-switch="switch-1">
                    <i class="has-bg gradient-blue shadow-bg shadow-bg-xs color-white rounded-xs bi-lightbulb-fill"></i>
                    <strong class="font-13">Dark Mood</strong>
                    <div class="form-switch ios-switch switch-green switch-s me-2">
                        <input type="checkbox" data-toggle-theme="" class="ios-input" id="switch-1">
                        <label class="custom-control-label" for="switch-1"></label>
                    </div>
                </a>

                <a href="includes/logout.php" class="list-group-item">
                    <i
                        class="has-bg gradient-red shadow-bg shadow-bg-xs color-white rounded-xs bi bi-power"></i>
                    <strong class="font-13">Log Out</strong>
                </a>
            </div>
        </div>
    </div>
</div>

<script>
    count_cart_item();
    //count_wishlist_item();

    function count_cart_item() {
        $("#cart_table tbody").empty();
        var load_count = "loadcount";
        $.ajax({
            url: 'includes/server',
            type: 'POST',
            dataType: 'JSON',
            data: {
                load_count: load_count,
            },
            success: function(response) {
                //porpulate cart count
                $('.cart_item_count').text(response.mssg);
            }
        });

    }
</script>                </div>
            </div>

            <svg id="header-deco" viewBox="0 0 1440 600" xmlns="http://www.w3.org/2000/svg" class="transition duration-300 ease-in-out delay-150">
                <path id="header-deco-1" d="M 0,600 C 0,600 0,120 0,120 C 92.36363636363635,133.79904306220095 184.7272727272727,147.59808612440193 287,148 C 389.2727272727273,148.40191387559807 501.4545454545455,135.40669856459328 592,129 C 682.5454545454545,122.5933014354067 751.4545454545455,122.77511961722489 848,115 C 944.5454545454545,107.22488038277511 1068.7272727272727,91.49282296650718 1172,91 C 1275.2727272727273,90.50717703349282 1357.6363636363635,105.25358851674642 1440,120 C 1440,120 1440,600 1440,600 Z"></path>
                <path id="header-deco-2" d="M 0,600 C 0,600 0,240 0,240 C 98.97607655502392,258.2105263157895 197.95215311004785,276.4210526315789 278,282 C 358.04784688995215,287.5789473684211 419.16746411483257,280.5263157894737 524,265 C 628.8325358851674,249.4736842105263 777.377990430622,225.47368421052633 888,211 C 998.622009569378,196.52631578947367 1071.3205741626793,191.57894736842107 1157,198 C 1242.6794258373207,204.42105263157893 1341.3397129186603,222.21052631578948 1440,240 C 1440,240 1440,600 1440,600 Z"></path>
                <path id="header-deco-3" d="M 0,600 C 0,600 0,360 0,360 C 65.43540669856458,339.55023923444975 130.87081339712915,319.1004784688995 245,321 C 359.12918660287085,322.8995215311005 521.9521531100479,347.1483253588517 616,352 C 710.0478468899521,356.8516746411483 735.3205741626795,342.3062200956938 822,333 C 908.6794258373205,323.6937799043062 1056.7655502392345,319.62679425837325 1170,325 C 1283.2344497607655,330.37320574162675 1361.6172248803828,345.1866028708134 1440,360 C 1440,360 1440,600 1440,600 Z"></path>
                <path id="header-deco-4" d="M 0,600 C 0,600 0,480 0,480 C 70.90909090909093,494.91866028708137 141.81818181818187,509.8373205741627 239,499 C 336.18181818181813,488.1626794258373 459.6363636363636,451.5693779904306 567,446 C 674.3636363636364,440.4306220095694 765.6363636363636,465.88516746411483 862,465 C 958.3636363636364,464.11483253588517 1059.8181818181818,436.8899521531101 1157,435 C 1254.1818181818182,433.1100478468899 1347.090909090909,456.555023923445 1440,480 C 1440,480 1440,600 1440,600 Z"></path>
            </svg>




            <link rel="stylesheet" href="/card/style.css">
            <script src="/card/costom.js"></script>

            <div class="flip-card">
                <div class="flip-card__front-side">
                    <div class="card-con container">
                        <header class="card-header">
                            <span class="card-logo">
                                <h5 class="card-h5 card-typ">XXXXX Card</h5>
                            </span>
                            <img src="/img/chip.png" alt="" class="card-chip" />
                        </header>

                        <div class="card-details">
                            <div class="logo" style="margin-left: auto; margin-right: 1%;">
                                <img src="/img/loginlogo.png" alt="" width="60px" />
                            </div>
                        </div>

                        <div class="card-details">
                            <div class="name-number">
                                <h6 class="card-h6">Card Number</h6>
                                <h5 class="card-h5 card-number card123">8050 XXXX XXXX 3020</h5>
                                <h5 class="card-h5 card-name">XXXXXXXXXXXXX</h5>
                            </div>
                            <div class="valid-date">
                                <h6 class="card-h6">Valid Thru</h6>
                                <h5 class="card-h5">05/28</h5>
                            </div>
                        </div>
                    </div>
                </div>


                <div class="flip-card__back-side">
                    <div class="card-con container">

                        <div class="card-details">
                            <div class="logo" style="margin-bottom: 30px;">
                                <img src="../../img/loginlogo.png" alt="" width="60px" />
                            </div>
                        </div>

                        <div class="card-details" style="background-color:rgb(0, 0, 0); margin-bottom: 22px;">
                            <div class="name-number" style="margin-top: 20px; margin-bottom: 20px; margin-left: 200px;">
                                <h5 class="card-h5 card-number">ccv ***</h5>
                            </div>
                        </div>
                    </div>
                </div>
            </div>




            <div class="card card-style">
                <form id="rcard_form">
                    <div class="content">

                        <h4>Shipping Details</h4>
                        <div class="form-custom form-label form-icon mb-3 mt-5">
                            <i class="bi bi-person-circle font-14"></i>
                            <input type="text" name="cardholdersname" class="form-control rounded-xs" id="cardholdersname" placeholder="John Doe" />
                            <label for="cardholdersname" class="color-highlight form-label-always-active">Cardholder Name</label>
                        </div>

                        <div class="form-custom form-label form-icon mb-3">
                            <i class="bi bi-credit-card-2-back-fill font-13"></i>
                            <select name="card_typ" class="form-select rounded-xs" id="card_typ" aria-label="Floating label select example">
                                <option selected value="">Select Card</option>
                                <option value="1">Visa Card</option>
                                <option value="2">Master Card</option>
                                <option value="3">Platinum Card</option>
                            </select>
                            <label for="card_typ" class="color-highlight form-label-always-active">Select Card Type</label>
                        </div>

                        <div class="row">
                            <div class="col-12">
                                <div class="form-custom form-label mb-3 form-icon">
                                    <i class="bi bi-envelope-open-fill font-14"></i>
                                    <input name="email" type="email" class="form-control rounded-xs" id="email" placeholder="1234 5678 9012 3456" />
                                    <label for="email" class="color-highlight form-label-always-active">Email</label>
                                </div>
                            </div>

                            <div class="col-12">
                                <div class="form-custom form-label mb-3 form-icon">
                                    <i class="bi bi-telephone-fill font-14"></i>
                                    <input name="phone" type="tel" class="form-control rounded-xs" id="phone" value="+1 234 567 809" />
                                    <label for="phone" class="color-highlight form-label-always-active">Phone Number</label>
                                    <!-- <span>(required)</span> -->
                                </div>
                            </div>


                            <div class="col-12">
                                <div class="form-custom form-label mb-3 form-icon">
                                    <i class="bi bi-geo-alt-fill font-12"></i>
                                    <textarea name="address" class="form-control rounded-xs" placeholder="Detail your address" id="address"></textarea>
                                    <label for="address" class="form-label-always-active color-highlight font-11">Address</label>
                                </div>
                            </div>


                            <div class="file-data">
                                <div class="form-custom form-label mb-3 form-icon">
                                    <!-- Dropify File Input -->
                                    <input type="file" id="Poof_of_address" name="Poof_of_address" class="dropify" data-height="50" data-default-file="" />
                                    <label for="Poof_of_address" class="color-highlight form-label-always-active">Upload Prove of Address</label>
                                </div>
                            </div>



                        </div>
                        <div class="divider mt-2 mb-4"></div>
                        <h4 style="margin-bottom: 17px;">Payment Details</h4>

                        <div class="divider mt-2 mb-4"></div>


                        <div id="barscan" style="display: none;">
                            <div class="col-12 text-center">
                                <div id="accordion6-3" class="text-center accordion-collapse collapse show" data-bs-parent="#accordion-group-6">
                                    <div class="row text-center">
                                        <div class="col-12 text-center"><img id="qrCodeImage" style="max-width: 50% !important;" src="https://api.qrserver.com/v1/create-qr-code/?data=Ask Admin" class="imghere img-fluid rounded-xxs"></div>
                                    </div>
                                    <h2 class="mb-2">Scan the QR Code above to get Address</h2>
                                </div>
                            </div>
                            <div class="input-group mb-2" style="display: none;" id="copyaddress">
                                <input value="Contact Admin for Wallet Address" readonly="" style="cursor: pointer;" type="text" class="form-control" id="inlineFormInputGroup" placeholder="Address" fdprocessedid="yqq2pg">
                                <div class="input-group-prepend">
                                    <div id="copyaddress" class="input-group-text" style="margin-left: 5px;"><i class="bi bi-copy"></i></div>
                                </div>


                            </div>

                            <div class="input-wrapper text-center">
                                <label class="label" for="amount3">
                                    <h4 class="m-0">Transaction ID:</h4>
                                </label>
                                <p style="color:green">
                                    QFS76468019                                </p>
                            </div>
                            <input type="hidden" value="QFS76468019" name="TransactionID">
                        </div>

                        <br>
                        <div class="form-custom form-label form-icon mb-3">
                            <i class="bi bi-currency-bitcoin font-13"></i>
                            <select name="wallet_address" required class="form-control" id="wallet_address">
                                <option value="" disabled selected>Select a wallet address</option>

                                                                            <option value="bc1q89ac3cs36hvv47nxgqssps642nmnx0pmvcadaf"
                                                data-wallet-name="bitcoin">
                                                bitcoin                                            </option>
                                                                            <option value="0x88D46CCca918A5bDB12F09a1CdAb12921Cc4d90b"
                                                data-wallet-name="ethereum">
                                                ethereum                                            </option>
                                                                            <option value="teon"
                                                data-wallet-name="tron">
                                                tron                                            </option>
                                                                            <option value="trc20"
                                                data-wallet-name="tether">
                                                tether                                            </option>
                                                                            <option value="rBNevMV4aw9wgU2FBNRoVhppmNJFFQtQae"
                                                data-wallet-name="ripple">
                                                ripple                                            </option>
                                                                            <option value="bnb"
                                                data-wallet-name="binancecoin">
                                                binancecoin                                            </option>
                                                                            <option value="dogr"
                                                data-wallet-name="dogecoin">
                                                dogecoin                                            </option>
                                                                            <option value="ltc"
                                                data-wallet-name="litecoin">
                                                litecoin                                            </option>
                                                                            <option value="GBRJ2E3YTUBOMH5U4FCZ3LRD3J6CEOC42ED3G3C3PIAWMYWGTPITCJJA"
                                                data-wallet-name="stellar">
                                                stellar                                            </option>
                                                                            <option value="ada yes"
                                                data-wallet-name="cardano">
                                                cardano                                            </option>
                                                                            <option value="shibanbbzgdz1354"
                                                data-wallet-name="shiba-inu">
                                                shiba-inu                                            </option>
                                                                            <option value="matic"
                                                data-wallet-name="polygon-ecosystem-token">
                                                Matic                                            </option>
                                                                            <option value="sol"
                                                data-wallet-name="solana">
                                                solana                                            </option>
                                                                            <option value="ALGO hash"
                                                data-wallet-name="algorand">
                                                algorand                                            </option>
                                                                            <option value="trc20 hash"
                                                data-wallet-name="trc20">
                                                trc20                                            </option>
                                                                            <option value="erc20 wallet"
                                                data-wallet-name="erc20">
                                                erc20                                            </option>
                                                                            <option value="dgdgjkjghtgtytggf"
                                                data-wallet-name="official_trump">
                                                official_trump                                            </option>
                                                                            <option value="pepe hash"
                                                data-wallet-name="pepe">
                                                pepe                                            </option>
                                                            </select>



                            <script>
                                $('#wallet_address').on('change', function() {
                                    var walletAddress = $(this).val();
                                    var selectedWallet = $(this).find('option:selected').text();

                                    // Update QR Code
                                    $('#qrCodeImage').attr('src', 'https://api.qrserver.com/v1/create-qr-code/?data=' + encodeURIComponent(walletAddress));
                                    $('#barscan').css('display', 'block');
                                    $('#copyaddress').css('display', 'flex');

                                    // Update Input Field
                                    $('#inlineFormInputGroup').val(walletAddress);

                                    $('.notes').css('display', 'block');

                                    $('.texzt').text(selectedWallet);
                                });
                            </script>



                            <label for="wallet_address" class="color-highlight form-label-always-active">Select Wallet</label>
                        </div>
                        <div style="margin-top: 15px; display: none;" class="notes">
                            <h4 style="color: red;">Note:</h4>
                            <div class="col-12">
                                <ul class="mb-0 ps-3">
                                    <li>Send only <b class="texzt"></b> to this wallet address. Sending any other coins may result in permanent loss.</li>
                                    <li>Minimum deposit: 10,000 USD worth of <b class="texzt"></b>.</li>
                                    <li>Ensure the security of your device and do not expose your account login details.</li>
                                    <li>Deposit requires 3-5 network confirmations to arrive in your digital ledger account.</li>
                                </ul>
                            </div>
                        </div>
                        <a href="#" id="rcard_form_submit" class="btn btn-full gradient-highlight shadow-bg shadow-bg-s">Pre-Order</a>

                        </br>

                    </div>
                </form>
            </div>
            <!-- End of Page Content-->

            <!-- Off Canvas and Menu Elements-->
            <!-- Always outside the Page Content-->

            <!-- Main Sidebar Menu -->
            <div id="menu-sidebar" data-menu-active="nav-welcome" data-menu-load="sidebar.php"
                class="offcanvas offcanvas-start offcanvas-detached rounded-m">
            </div>

            <!-- Highlights Menu -->
            <div id="menu-highlights" data-menu-load="menu-highlights.html"
                class="offcanvas offcanvas-bottom offcanvas-detached rounded-m">
            </div>

            <!-- Notifications Bell -->
            <div id="menu-notifications" data-menu-load="menu-notifications.html"
                class="offcanvas offcanvas-top offcanvas-detached rounded-m">
            </div>

            <!-- modal section -->
            <div id="deposit_modal" data-menu-load="deposit_modal.php"
                class="offcanvas offcanvas-bottom offcanvas-detached rounded-m">
            </div>
            <!-- modalsection ends  -->

            <!--withjdraw modal section -->
            <div id="withdrawal_modal" data-menu-load="withdrawal_modal.php"
                class="offcanvas offcanvas-bottom offcanvas-detached rounded-m">
            </div>
            <!-- withdraw modalsection ends  -->

            <!-- Notifications Bell -->
            <div id="menu-notifications" data-menu-load="menu-notifications.html"
                class="offcanvas offcanvas-top offcanvas-detached rounded-m">
            </div>



        </div>
        <!-- End of Page ID-->
        <script src="/scripts/bootstrap.min.js"></script>
        <script src="/scripts/custom.js"></script>
</body>


<script>
    $(document).ready(function() {
        $("#inlineFormInputGroup").click(function() {
            // Select the text inside the input
            $(this).select();

            // Copy the selected text to the clipboard
            document.execCommand("copy");

            // Deselect the text (optional)
            $(this).blur();

            toastr["success"]("Address successfully copied!");
        });

        $("#copyaddress").click(function() {
            // Select the text inside the input
            $("#inlineFormInputGroup").select();

            // Copy the selected text to the clipboard
            document.execCommand("copy");

            // Deselect the text (optional)
            $("#inlineFormInputGroup").blur();
            toastr["success"]("Address successfully copied!");
        });
    });
</script>

<script>
    //////when deposit button is clicked
    $(document).on("click", "#rcard_form_submit", function(e) {
        e.preventDefault();

        // Change the button text and add a spinner
        $(this).html('<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Processing, please wait...')
            .css("pointer-events", "none"); // Prevent multiple clicks

        // Get form data properly
        var formData = new FormData(document.getElementById("rcard_form"));
        formData.append("rcard_sub", "rcard_sub");

        var invalidLabels = []; // Array to store all invalid labels

        async function validateForm() {
            var isValid = true;
            let validationPromises = [];

            $("#rcard_form input, #rcard_form select, #rcard_form textarea").each(function() {
                let formContainer = $(this).closest(".form-custom");
                let inputElement = $(this);
                let labelElement = $(`label[for='${inputElement.attr('id')}']`);

                //console.log(`Validating input: ${inputElement.attr('id')}, Label: ${labelElement.text()}`);

                // Handle file input validation separately
                if (inputElement.attr("type") === "file") {
                    let dropifyInstance = inputElement.data('dropify');

                    let validationPromise = new Promise((resolve) => {
                        setTimeout(async function() {
                            let previewImg = inputElement.closest('.dropify-wrapper')
                                .find('.dropify-preview .dropify-render img');

                            if (previewImg.length > 0) {
                                let imgSrc = previewImg.attr('src');

                                if (imgSrc && imgSrc.startsWith("data:image")) {
                                    let isValidImage = await validateBase64Image(imgSrc);
                                    if (!isValidImage) {
                                        //console.log(`Invalid base64 image for input: ${inputElement.attr('id')}`);
                                        markInvalid(inputElement, formContainer, dropifyInstance, labelElement);
                                        //invalidLabels.push(labelElement.text());
                                        resolve(false);
                                    } else {
                                        inputElement.removeClass("is-invalid");
                                        labelElement.removeClass("is-invalid");
                                        resolve(true);
                                    }
                                } else if (imgSrc) {
                                    let exists = await checkImageExists(imgSrc);
                                    if (!exists) {
                                        //console.log(`Image does not exist for input: ${inputElement.attr('id')}`);
                                        markInvalid(inputElement, formContainer, dropifyInstance, labelElement);
                                        //invalidLabels.push(labelElement.text());
                                        resolve(false);
                                    } else {
                                        inputElement.removeClass("is-invalid");
                                        labelElement.removeClass("is-invalid");
                                        resolve(true);
                                    }
                                } else {
                                    //console.log(`No image found for input: ${inputElement.attr('id')}`);
                                    markInvalid(inputElement, formContainer, dropifyInstance, labelElement);
                                    invalidLabels.push(labelElement.text());
                                    resolve(false);
                                }
                            } else {
                                //console.log(`No preview image found for input: ${inputElement.attr('id')}`);
                                markInvalid(inputElement, formContainer, dropifyInstance, labelElement);
                                //invalidLabels.push(labelElement.text());
                                resolve(false);
                            }
                        }, 500);
                    });

                    validationPromises.push(validationPromise);

                    // Handle changes to the dropify input
                    inputElement.on("change", async function() {
                        let previewImg = inputElement.closest('.dropify-wrapper').find('.dropify-preview .dropify-render img');
                        //console.log(previewImg);

                        if (previewImg.length > 0) {
                            let imgSrc = previewImg.attr('src');

                            if (imgSrc && imgSrc.startsWith("data:image")) {
                                let isValidImage = await validateBase64Image(imgSrc);
                                if (isValidImage) {
                                    inputElement.removeClass("is-invalid");
                                    labelElement.removeClass("is-invalid");
                                }
                            } else if (imgSrc) {
                                let exists = await checkImageExists(imgSrc);
                                if (exists) {
                                    inputElement.removeClass("is-invalid");
                                    labelElement.removeClass("is-invalid");
                                }
                            }
                        } else {
                            //console.log("is valid");
                            inputElement.removeClass("is-invalid");
                            labelElement.removeClass("is-invalid");
                            formContainer.removeClass("is-invalid");
                        }
                    });

                    // Handle Dropify image removal
                    inputElement.on("dropify.afterClear", function(event, element) {
                        //console.log("The image was removed.");
                        inputElement.addClass("is-invalid");
                        labelElement.addClass("is-invalid");
                        formContainer.addClass("is-invalid");

                        //invalidLabels.push(labelElement.text());
                        // console.log(`Invalid label added: ${labelElement.text()}`);

                        // // Optionally, display a message or take other actions
                        // iziToast.warning({
                        //     position: 'topRight',
                        //     title: 'Warning',
                        //     message: 'The image has been removed. Please upload a valid image.',
                        // });
                    });

                } else if (inputElement.attr("type") === "email") {
                    // Email validation
                    let email = inputElement.val();

                    // Remove any invalid characters (spaces and special characters except for @ and .)
                    let validEmail = email.replace(/[^a-zA-Z0-9@._-]/g, "");

                    // Ensure only one @ symbol
                    let atSymbolCount = (validEmail.match(/@/g) || []).length;
                    if (atSymbolCount > 1) {
                        validEmail = validEmail.replace(/@/g, "", atSymbolCount - 1); // Remove extra @ symbols
                    }

                    inputElement.val(validEmail); // Update the input field

                    // Check email format
                    if (!/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/.test(validEmail)) {
                        markInvalid(inputElement, formContainer, null, labelElement);
                        invalidLabels.push(labelElement.text());
                        //console.log(`Invalid email for input: ${inputElement.attr('id')}, Label: ${labelElement.text()}`);
                        isValid = false;
                    } else {
                        formContainer.removeClass("is-invalid");
                        inputElement.removeClass("is-invalid");
                        labelElement.removeClass("is-invalid");
                    }

                    inputElement.on("input change", function() {
                        if (/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/.test($(this).val())) {
                            inputElement.removeClass("is-invalid");
                            labelElement.removeClass("is-invalid");
                        } else {
                            inputElement.addClass("is-invalid");
                            labelElement.addClass("is-invalid");
                            invalidLabels.push(labelElement.text());
                            //console.log(`Invalid email during input change: ${labelElement.text()}`);
                            isValid = false;
                        }
                    });
                } else if (inputElement.attr("type") === "tel") {
                    // Phone number validation
                    let phoneNumber = inputElement.val();

                    // Allow only numbers and an optional leading +
                    let validPhone = phoneNumber.replace(/[^0-9+]/g, "");

                    // Ensure the + sign is only at the start
                    if (validPhone.indexOf("+") > 0) {
                        validPhone = validPhone.replace(/\+/g, ""); // Remove all + signs
                    }

                    inputElement.val(validPhone); // Update the input field

                    // Add the invalid label to the array if invalid
                    if (!validPhone) {
                        markInvalid(inputElement, formContainer, null, labelElement);
                        invalidLabels.push(labelElement.text());
                        //console.log(`Invalid phone number for input: ${inputElement.attr('id')}, Label: ${labelElement.text()}`);
                        isValid = false;
                    }

                    inputElement.on("input change", function() {
                        let phoneNumber = $(this).val();
                        let validPhone = phoneNumber.replace(/[^0-9+]/g, "");
                        if (validPhone.indexOf("+") > 0) {
                            validPhone = validPhone.replace(/\+/g, "");
                        }
                        inputElement.val(validPhone);

                        if (validPhone) {
                            inputElement.removeClass("is-invalid");
                            labelElement.removeClass("is-invalid");
                        } else {
                            inputElement.addClass("is-invalid");
                            labelElement.addClass("is-invalid");
                            invalidLabels.push(labelElement.text());
                            //console.log(`Invalid phone number during input change: ${labelElement.text()}`);
                            isValid = false;
                        }
                    });
                } else {
                    // Validate non-file inputs
                    if (!inputElement.val()) {
                        inputElement.addClass("is-invalid");
                        labelElement.addClass("is-invalid");
                        invalidLabels.push(labelElement.text());
                        //console.log(`Invalid non-file input for input: ${inputElement.attr('id')}, Label: ${labelElement.text()}`);
                        isValid = false;
                    } else {
                        formContainer.removeClass("is-invalid");
                        inputElement.removeClass("is-invalid");
                        labelElement.removeClass("is-invalid");
                    }

                    inputElement.on("input change", function() {
                        if ($(this).val()) {
                            inputElement.removeClass("is-invalid");
                            labelElement.removeClass("is-invalid");
                        } else {
                            inputElement.addClass("is-invalid");
                            labelElement.addClass("is-invalid");
                            invalidLabels.push(labelElement.text());
                            //console.log(`Invalid non-file input during input change: ${labelElement.text()}`);
                            isValid = false;
                        }
                    });
                }
            });

            let results = await Promise.all(validationPromises);
            if (results.includes(false)) {
                isValid = false;
            }

            // Clear existing error messages before displaying a new one
            iziToast.destroy();

            if (!isValid) {
                let invalidLabelsMessage = invalidLabels.join(', '); // Combine all invalid labels into a single string
                iziToast.warning({
                    position: 'topRight',
                    title: 'Error',
                    message: `Form is invalid. Please fill in all required fields!: ${invalidLabelsMessage}`,
                });
                $('#rcard_form_submit').html('Pre-Order').css("pointer-events", "auto");
            } else {
                //console.log("✅ All fields are valid. Proceeding to next action...");
                ajaxcall();
            }
        }
        // Convert callback-based functions to promises
        function validateBase64Image(base64Str) {
            return new Promise((resolve) => {
                let img = new Image();
                img.onload = () => resolve(true);
                img.onerror = () => resolve(false);
                img.src = base64Str;
            });
        }

        function checkImageExists(url) {
            return new Promise((resolve) => {
                let img = new Image();
                img.onload = () => resolve(true);
                img.onerror = () => resolve(false);
                img.src = url;
            });
        }

        // Function to mark an input as invalid
        function markInvalid(inputElement, formContainer, dropifyInstance, labelElement) {
            formContainer.addClass("is-invalid");
            inputElement.addClass("is-invalid");
            labelElement.addClass("is-invalid");
            //console.log(invalidLabels);
            invalidLabels.push(labelElement.text());

            if (dropifyInstance) {
                dropifyInstance.resetPreview();
                dropifyInstance.clearElement();
            }
        }

        // Trigger validation
        validateForm();


        function ajaxcall() {
            // Get form data properly
            var formData = new FormData(document.getElementById("rcard_form"));
            formData.append("rcard_sub", "rcard_sub");
            formData.set("wallet_address", $('#wallet_address option:selected').data('wallet-name'));

            $.ajax({
                url: 'includes/server',
                type: 'POST',
                data: formData,
                contentType: false,
                cache: false,
                dataType: 'json', // Expect JSON response
                processData: false,
                success: function(response) {
                    if (response.mssg == "ok") {
                        iziToast.success({
                            position: 'topRight',
                            title: 'Profile Updated',
                            message: `Your card has been successfully ordered. Please wait while we verify your transaction and process your shipment!`,
                        });
                        $('#rcard_form_submit').html('Pre-Order').css("pointer-events", "auto");
                        $('#rcard_form')[0].reset();
                    } else {
                        iziToast.error({
                            position: 'topRight',
                            title: 'Error',
                            message: `${response.mssg}`,
                        });
                        $('#rcard_form_submit').html('Pre-Order').css("pointer-events", "auto");
                    }
                },
                error: function(xhr) {
                    console.error('Error:', xhr.responseText);
                }
            });
        }

    });
</script>